# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
export PATH="${PATH}:${HOME}/.local/bin"
export PATH=$HOME/bin:/usr/local/bin:$PATH

export JAVA_HOME=$(/usr/libexec/java_home)

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# VOLTA
export VOLTA_FEATURE_PNPM=1

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git colored-man-pages colorize zsh-syntax-highlighting zsh-autosuggestions zsh-completions)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi
export EDITOR="nvim"
# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
alias zshconfig="nvim ~/.zshrc"
alias zshsource="source ~/.zshrc"
alias ohmyzsh="nvim ~/.oh-my-zsh"

alias lg="lazygit"

alias v="nvim ."
alias vim="nvim"
alias vac="nvim ~/.config/alacritty/alacritty.yml"
alias van="cd ~/.config/nvim && v"
alias c="clear"
alias e="exit"
alias rm="rm -rf"
alias ls="ls -lah"
alias nr="npm run"
alias nrs="npm run start"
alias nrb="npm run build"
alias nrc="npm run commit"
alias gpup="git push --set-upstream origin"
alias ga.="git add ."
alias gfu="git fetch upstream"
alias grbu="git rebase upstream"
alias ncu="pnpm --package=npm-check-updates dlx ncu --format group"
alias pnx="pnpm exec"
alias nx='$PWD/node_modules/.bin/nx'

alias node14="n use 14"
alias node16="n use 16"
alias node18="n use 18"
alias npk="pnpm --package=npkill dlx npkill"
alias ylrS="yarn local-registry start"
alias ylrE="yarn local-registry enable"
alias ylrD="yarn local-registry disable"
alias ylrC="yarn local-registry clear"
alias gwt="git worktree"
alias ghc="cd ~/code/github"
alias ghcc="ghc && cd "
alias t="tmux"
alias tconfig="vim ~/.tmux.conf"

alias code="code-insiders"
alias webstormeap="webstorm1"

# list all available simulators
alias listios="xcrun simctl list devices"

alias sandbox="cd ~/code/sandbox"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

export N_PREFIX="$HOME/n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"  # Added by n-install (see http://git.io/n-install-repo).

function make-asset() {
    # check if an argument was provided
    if [[ $# -eq 0 ]]; then
        echo "Usage: $0 <argument>"
        exit 1
    fi

    # get the first argument
    argument=$1

    # append "-raw" to the argument and assign to a new variable
    argument_raw="${argument}-raw"

    # echo the new variable
    echo "Processing $argument_raw"

    # webm
    ffmpeg -i "$argument_raw.mp4" -vcodec libvpx-vp9 -b:v 1M -acodec libvorbis "$argument.webm"

    # back to mp4
    ffmpeg -i "$argument.webm" -vcodec h264 -acodec aac -strict -2 "$argument.mp4"

    # use mp4 to generate palette
    ffmpeg -i "$argument.mp4" -filter_complex "[0:v] palettegen" "palette.png"

    # convert mp4 to gif
    ffmpeg  -i "$argument.mp4" -i palette.png -filter_complex "[0:v] fps=10,scale=720:-1 [new];[new][1:v] paletteuse" "$argument.gif"

    # remove raw file and palette
    rm "$argument_raw.mp4"
    rm "palette.png"
}
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"
